# name: Deploy to Firebase Hosting
# on:
#   # push:
#   # branches:
#   # - main
#   workflow_dispatch:
#     inputs:
#       projectId:
#         description: "Enter GCP projectId"
#         required: true
#       hostingChannel:
#         description: "Enter Firebase Hosting Channel"
#         required: true

# jobs:
#   build_and_deploy:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v4

#       - name: Install Dependencies.
#         run: |
#           npm ci && npm run build

#       - name: Archive Artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist
#           path: ./dist
#           if-no-files-found: warn
#           retention-days: 1
#           compression-level: 0 # no compression
#           # overwrite: false

#       - name: Deploy to Firebase
#         uses: FirebaseExtended/action-hosting-deploy@v0
#         id: firebase_hosting_channel
#         with:
#           # You don't need to set this secret yourself - GitHub sets it automatically.
#           repoToken: ${{ secrets.GITHUB_TOKEN }}

#           # The easiest way to set it up (fbServiceA/c) is to run "firebase init hosting:github"
#           firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_FIREBASECFT }}

#           expires: 1d # default 30d
#           projectId: ${{ github.event.inputs.projectId }}
#           channelId: ${{ github.event.inputs.hostingChannel }}
#         env:
#           # This token can be aquired through the firebase login:ci command.
#           FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

#       # - name: Check outputs
#       #   run: |
#       #     echo urls ${{steps.firebase_hosting_channel.outputs.url}}
#       #     echo expire_time ${{steps.firebase_hosting_channel.outputs.expire_time}}
#       #     echo details_url ${{steps.firebase_hosting_channel.outputs.details_url}}

name: Build and Deploy
on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      projectId:
        description: "Enter GCP projectId"
        required: true
      hostingChannel:
        description: "Enter Firebase Hosting Channel"
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci && npm run build

      - name: Archive Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy to Firebase
        uses: w9jds/firebase-action:v13.8.0
        with:
          # PROJECT_ID: ${{ github.event.inputs.projectId }}
          args: |
            deploy --only hosting -m "ci deploy"
            # if [ "${{ github.event.inputs.hostingChannel }}" = "stage" ]; then hosting:channel:deploy stage; else deploy --only hosting -m "ci deploy"; fi

            # if [ "${{ github.event.inputs.hostingChannel }}" = "stage" ]; then
            # firebase hosting:channel:deploy ${{ github.event.inputs.hostingChannel }}
            # else
            # firebase deploy --only hosting -m "ci deploy" 
            # fi

        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          # GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          # GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
